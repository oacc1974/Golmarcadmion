version: '3.8'

services:
  mongodb:
    image: mongo:6
    container_name: golmarc-mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    volumes:
      - mongodb_data:/data/db
    networks:
      - golmarc-network
    command: ["--auth"]

  redis:
    image: redis:7-alpine
    container_name: golmarc-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - golmarc-network
    command: redis-server --requirepass ${REDIS_PASSWORD}

  api:
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
    container_name: golmarc-api
    restart: always
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - MONGO_URI=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb:27017/${MONGO_DB}?authSource=admin
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - LOYVERSE_API_KEY=${LOYVERSE_API_KEY}
      - LOYVERSE_WEBHOOK_SECRET=${LOYVERSE_WEBHOOK_SECRET}
    depends_on:
      - mongodb
      - redis
    networks:
      - golmarc-network

  web:
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
    container_name: golmarc-web
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://api:3001/api
    depends_on:
      - api
    networks:
      - golmarc-network

networks:
  golmarc-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:
